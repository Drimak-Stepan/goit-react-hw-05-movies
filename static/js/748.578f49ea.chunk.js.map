{"version":3,"file":"static/js/748.578f49ea.chunk.js","mappings":"kOAsEA,UAjEmB,WACjB,OAA0BA,EAAAA,EAAAA,UAAS,CACjCC,MAAO,GACPC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAcC,EAAd,KAKQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,oGAEjBJ,GAAS,SAAAK,GAAS,yBACbA,GADa,IAEhBR,SAAS,EACTC,MAAO,MAHS,IAFD,UAQIQ,EAAAA,EAAAA,IAAgBL,GARpB,OAQXM,EARW,OASjBP,GAAS,SAAAK,GACP,OAAO,kBACFA,GADL,IAEET,MAAOW,GAEV,IAdgB,gDAgBjBP,GAAS,SAAAK,GAAS,yBACbA,GADa,IAEhBP,MAAK,MAFW,IAhBD,yBAqBjBE,GAAS,SAAAK,GACP,OAAO,kBACFA,GADL,IAEER,SAAS,GAEZ,IA1BgB,4EAAH,qDA8BlBO,GACD,GAAE,CAACH,IAEJ,IAAQL,EAAUG,EAAVH,MACRY,QAAQC,IAAIb,GACZ,IAAMc,EAAWd,EAAMe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,QAAvB,OACzB,2BACE,qCAAaD,EAAeE,aAC5B,uBAAID,MAFGF,EADgB,IAO3B,OACE,yBACGhB,EAAMoB,OAAS,GACd,iCACE,qCACA,wBAAKN,QAGP,sEAIP,C,sLClEKO,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAgB,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SACPN,EAASO,IAAI,sBAAuB,CACzDJ,OAAQ,CACNG,KAAAA,KAH0B,uBACtBE,EADsB,EACtBA,KADsB,kBAOvBA,EAAKC,SAPkB,2CAAH,qDAUhBC,EAAe,mCAAG,WAAMf,GAAN,yFACNK,EAASO,IAAT,iBAAuBZ,IADjB,uBACrBa,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMfG,EAAc,mCAAG,WAAMhB,GAAN,yFACLK,EAASO,IAAT,iBAAuBZ,EAAvB,aADK,uBACpBa,EADoB,EACpBA,KADoB,kBAGrBA,EAAKI,MAHgB,2CAAH,sDAMdvB,EAAe,mCAAG,WAAMM,GAAN,yFACNK,EAASO,IAAT,iBAAuBZ,EAAvB,aADM,uBACrBa,EADqB,EACrBA,KADqB,kBAGtBA,EAAKC,SAHiB,2CAAH,sDAMfI,EAAW,mCAAG,WAAMC,GAAN,yFACFd,EAASO,IAAT,gBAA8B,CAAEJ,OAAQ,CAAEW,MAAAA,KADxC,uBACjBN,EADiB,EACjBA,KADiB,kBAGlBA,EAAKC,SAHa,2CAAH,qD","sources":["pages/ReviewsPage/ReviewsPage.jsx","shared/api/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from 'shared/api/api';\n\nconst ReviewsPag = () => {\n  const [state, setState] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setState(prevState => ({\n          ...prevState,\n          loading: true,\n          error: null,\n        }));\n\n        const result = await getMovieReviews(movieId);\n        setState(prevState => {\n          return {\n            ...prevState,\n            items: result,\n          };\n        });\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          error,\n        }));\n      } finally {\n        setState(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n          };\n        });\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  const { items } = state;\n  console.log(items);\n  const elements = items.map(({ id, author_details, content }) => (\n    <li key={id}>\n      <h3>Author: {author_details.username}</h3>\n      <p>{content}</p>\n    </li>\n  ));\n\n  return (\n    <div>\n      {items.length > 0 ? (\n        <>\n          <h2>Reviews</h2>\n          <ul>{elements}</ul>\n        </>\n      ) : (\n        <h3>We don`t have any reviews for this movie</h3>\n      )}\n    </div>\n  );\n};\n\nexport default ReviewsPag;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'a3e9617806211f5c17cdc3e47a9d3960',\n  },\n});\n\nexport const getTrendingFilms = async (page = 1) => {\n  const { data } = await instance.get('/trending/movie/day', {\n    params: {\n      page,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n\n  return data;\n};\n\nexport const getMovieActors = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data.results;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await instance.get(`/search/movie`, { params: { query } });\n\n  return data.results;\n};\n"],"names":["useState","items","loading","error","state","setState","movieId","useParams","useEffect","fetchReviews","prevState","getMovieReviews","result","console","log","elements","map","id","author_details","content","username","length","instance","axios","baseURL","params","api_key","getTrendingFilms","page","get","data","results","getMovieDetails","getMovieActors","cast","searchMovie","query"],"sourceRoot":""}