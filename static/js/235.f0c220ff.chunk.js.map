{"version":3,"file":"static/js/235.f0c220ff.chunk.js","mappings":"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","sources":["modules/ShowList/ShowList.styled.jsx","modules/ShowList/ShowList.jsx","modules/MoviesSearchForm/MoviesSearchForm.styled.jsx","modules/MoviesSearchForm/MoviesSearchForm.jsx","pages/MoviesPage/MoviesPage.jsx","shared/api/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const StylesLink = styled(Link)`\n  color: inherit;\n  font-weight: 600;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { StylesLink } from './ShowList.styled';\n\nconst ShowList = ({ items }) => {\n  const location = useLocation();\n  const elements = items.map(({ id, title }) => (\n    <li key={id}>\n      <StylesLink state={{ from: location }} to={`/movies/${id}`}>\n        {title}\n      </StylesLink>\n    </li>\n  ));\n\n  return <ol>{elements}</ol>;\n};\n\nexport default ShowList;\n\nShowList.defaultProps = {\n  items: [],\n};\n\nShowList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.form`\n  display: inline-flex;\n  align-items: center;\n  margin: 10px 10px 0 0;\n`;\n\nexport const Input = styled.input`\n  padding: 8px;\n  border-radius: 4px;\n  font: inherit;\n  outline-color: orangered;\n`;\nexport const Btn = styled.button`\n  display: inline-block;\n  padding: 10px;\n  margin-left: 10px;\n  border-radius: 4px;\n  font: inherit;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  text-decoration: none;\n  cursor: pointer;\n  background-color: #3f51b5;\n  color: #fff;\n  border: 0;\n\n  :hover,\n  :focus {\n    background-color: orangered;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Wrapper, Input, Btn } from './MoviesSearchForm.styled';\n\nconst MovieSearch = ({ value, onSubmit }) => {\n  const [state, setState] = useState({\n    query: value,\n  });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({\n      ...state,\n    });\n  };\n\n  return (\n    <Wrapper onSubmit={handleSubmit}>\n      <Input\n        name=\"query\"\n        value={state.query}\n        onChange={handleChange}\n        placeholder=\"Enter name of movie\"\n        required\n      />\n      <Btn>Search</Btn>\n    </Wrapper>\n  );\n};\n\nexport default MovieSearch;\n\nMovieSearch.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport MovieSearch from 'modules/MoviesSearchForm';\nimport ShowList from 'modules/ShowList';\n\nimport { searchMovie } from 'shared/api/api';\n\nconst MoviesPage = () => {\n  const [state, setState] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setState(prevState => ({\n          ...prevState,\n          loading: true,\n        }));\n\n        const data = await searchMovie(query);\n        setState(prevState => ({\n          ...prevState,\n          items: data,\n        }));\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          error,\n        }));\n      } finally {\n        setState(prevState => ({\n          ...prevState,\n          loading: false,\n        }));\n      }\n    };\n\n    if (query) {\n      fetchMovie();\n    }\n  }, [query]);\n\n  const changeSearch = query => {\n    setSearchParams(query);\n  };\n\n  const { items } = state;\n\n  return (\n    <div>\n      <MovieSearch value={query} onSubmit={changeSearch} />\n      {items.length > 0 && <ShowList items={items} />}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'a3e9617806211f5c17cdc3e47a9d3960',\n  },\n});\n\nexport const getTrendingFilms = async (page = 1) => {\n  const { data } = await instance.get('/trending/movie/day', {\n    params: {\n      page,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n\n  return data;\n};\n\nexport const getMovieActors = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data.results;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await instance.get(`/search/movie`, { params: { query } });\n\n  return data.results;\n};\n"],"names":["StylesLink","styled","Link","ShowList","items","location","useLocation","elements","map","id","title","state","from","to","defaultProps","Wrapper","Input","Btn","value","onSubmit","useState","query","setState","e","preventDefault","name","onChange","target","placeholder","required","loading","error","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMovie","prevState","searchMovie","data","length","instance","axios","baseURL","params","api_key","getTrendingFilms","page","results","getMovieDetails","getMovieActors","cast","getMovieReviews"],"sourceRoot":""}