{"version":3,"file":"static/js/643.6caa0e47.chunk.js","mappings":"sMAGaA,GAAaC,E,OAAAA,GAAOC,EAAAA,GAAPD,CAAH,gE,SCEjBE,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACZC,GAAWC,EAAAA,EAAAA,MACXC,EAAWH,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACzB,yBACE,SAACV,EAAD,CAAYW,MAAO,CAAEC,KAAMP,GAAYQ,GAAE,kBAAaJ,GAAtD,SACGC,KAFID,EADgB,IAQ3B,OAAO,wBAAKF,GACb,EAED,IAEAJ,EAASW,aAAe,CACtBV,MAAO,G,iKCoCT,EApDoB,WAClB,OAA0BW,EAAAA,EAAAA,UAAS,CACjCX,MAAO,GACPY,SAAS,EACTC,MAAO,OAHT,eAAON,EAAP,KAAcO,EAAd,MAMAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGAEfF,GAAS,SAAAG,GAAS,yBACbA,GADa,IAEhBL,SAAS,EACTC,MAAO,MAHS,IAFH,UAQMK,EAAAA,EAAAA,MARN,OAQTC,EARS,OASfL,GAAS,SAAAG,GACP,OAAO,kBACFA,GADL,IAEEjB,MAAM,GAAD,eAAMiB,EAAUjB,QAAhB,OAA0BmB,KAElC,IAdc,gDAgBfL,GAAS,SAAAG,GAAS,yBACbA,GADa,IAEhBJ,MAAK,MAFW,IAhBH,yBAqBfC,GAAS,SAAAG,GACP,OAAO,kBACFA,GADL,IAEEL,SAAS,GAEZ,IA1Bc,4EAAH,qDA8BhBI,GACD,GAAE,CAACF,IAEJ,IAAQd,EAA0BO,EAA1BP,MAAOY,EAAmBL,EAAnBK,QAASC,EAAUN,EAAVM,MAExB,OACE,gCACGb,EAAMoB,OAAS,IAAK,SAACrB,EAAA,EAAD,CAAUC,MAAOA,IACrCY,IAAW,mCACXC,IAAS,4CAGf,EC5CD,EATiB,WACf,OACE,iCACE,4CACA,SAAC,EAAD,MAGL,C,sLCPKQ,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAP,EAAgB,mCAAG,2GAAOQ,EAAP,+BAAc,EAAd,SACPL,EAASM,IAAI,sBAAuB,CACzDH,OAAQ,CACNE,KAAAA,KAH0B,uBACtBE,EADsB,EACtBA,KADsB,kBAOvBA,EAAKC,SAPkB,2CAAH,qDAUhBC,EAAe,mCAAG,WAAMzB,GAAN,yFACNgB,EAASM,IAAT,iBAAuBtB,IADjB,uBACrBuB,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMfG,EAAc,mCAAG,WAAM1B,GAAN,yFACLgB,EAASM,IAAT,iBAAuBtB,EAAvB,aADK,uBACpBuB,EADoB,EACpBA,KADoB,kBAGrBA,EAAKI,MAHgB,2CAAH,sDAMdC,EAAe,mCAAG,WAAM5B,GAAN,yFACNgB,EAASM,IAAT,iBAAuBtB,EAAvB,aADM,uBACrBuB,EADqB,EACrBA,KADqB,kBAGtBA,EAAKC,SAHiB,2CAAH,sDAMfK,EAAW,mCAAG,WAAMC,GAAN,yFACFd,EAASM,IAAT,gBAA8B,CAAEH,OAAQ,CAAEW,MAAAA,KADxC,uBACjBP,EADiB,EACjBA,KADiB,kBAGlBA,EAAKC,SAHa,2CAAH,qD","sources":["modules/ShowList/ShowList.styled.jsx","modules/ShowList/ShowList.jsx","modules/TrendMovies/TrendMovies.jsx","pages/HomePage/HomePage.jsx","shared/api/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const StylesLink = styled(Link)`\n  color: inherit;\n  font-weight: 600;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { StylesLink } from './ShowList.styled';\n\nconst ShowList = ({ items }) => {\n  const location = useLocation();\n  const elements = items.map(({ id, title }) => (\n    <li key={id}>\n      <StylesLink state={{ from: location }} to={`/movies/${id}`}>\n        {title}\n      </StylesLink>\n    </li>\n  ));\n\n  return <ol>{elements}</ol>;\n};\n\nexport default ShowList;\n\nShowList.defaultProps = {\n  items: [],\n};\n\nShowList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\n\nimport { getTrendingFilms } from '../../shared/api/api';\nimport ShowList from 'modules/ShowList/ShowList';\n\nconst TrendMovies = () => {\n  const [state, setState] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  useEffect(() => {\n    const fetchFilms = async () => {\n      try {\n        setState(prevState => ({\n          ...prevState,\n          loading: true,\n          error: null,\n        }));\n\n        const result = await getTrendingFilms();\n        setState(prevState => {\n          return {\n            ...prevState,\n            items: [...prevState.items, ...result],\n          };\n        });\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          error,\n        }));\n      } finally {\n        setState(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n          };\n        });\n      }\n    };\n\n    fetchFilms();\n  }, [setState]);\n\n  const { items, loading, error } = state;\n\n  return (\n    <>\n      {items.length > 0 && <ShowList items={items} />}\n      {loading && <p>...load</p>}\n      {error && <p>...load failed</p>}\n    </>\n  );\n};\n\nexport default TrendMovies;\n","import TrendMovies from '../../modules/TrendMovies/TrendMovies';\n\nconst HomePage = () => {\n  return (\n    <>\n      <h2>Trending today</h2>\n      <TrendMovies />\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'a3e9617806211f5c17cdc3e47a9d3960',\n  },\n});\n\nexport const getTrendingFilms = async (page = 1) => {\n  const { data } = await instance.get('/trending/movie/day', {\n    params: {\n      page,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n\n  return data;\n};\n\nexport const getMovieActors = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data.results;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await instance.get(`/search/movie`, { params: { query } });\n\n  return data.results;\n};\n"],"names":["StylesLink","styled","Link","ShowList","items","location","useLocation","elements","map","id","title","state","from","to","defaultProps","useState","loading","error","setState","useEffect","fetchFilms","prevState","getTrendingFilms","result","length","instance","axios","baseURL","params","api_key","page","get","data","results","getMovieDetails","getMovieActors","cast","getMovieReviews","searchMovie","query"],"sourceRoot":""}