{"version":3,"file":"static/js/891.04e65cf6.chunk.js","mappings":"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","sources":["pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","shared/api/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  padding: 0 10px 10px 10px;\n  > div {\n    display: flex;\n  }\n  > h2 {\n    margin-bottom: 10px;\n  }\n`;\nexport const Btn = styled.button`\n  display: inline-block;\n  padding: 10px;\n  margin: 0 0 10px 10px;\n  border-radius: 4px;\n  font: inherit;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  text-decoration: none;\n  cursor: pointer;\n  background-color: #3f51b5;\n  color: #fff;\n  border: 0;\n\n  :hover,\n  :focus {\n    background-color: orangered;\n  }\n`;\n\nexport const Imges = styled.div`\n  margin: 0 10px 0 0;\n  flex-basis: 300px;\n  > img {\n    max-width: 300px;\n    height: auto;\n  }\n`;\nexport const Description = styled.div`\n  margin-left: 0;\n  flex-basis: 1100px;\n`;\n","import { useState, useEffect, Suspense} from 'react';\nimport {\n  Link,\n  Outlet,\n  useParams,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\n\nimport { getMovieDetails } from '../../shared/api/api';\nimport { Section, Btn, Imges, Description } from './MovieDetailsPage.styled';\nimport comeBack from '../../shared/come_back.jpg';\n\nconst MovieDetailsPage = () => {\n  const [state, setState] = useState({\n    item: {},\n    loading: false,\n    error: null,\n  });\n\n  const { movieId } = useParams();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/movies';\n  const goBack = () => navigate(from);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        setState(prevState => ({\n          ...prevState,\n          loading: true,\n          error: null,\n        }));\n\n        const result = await getMovieDetails(movieId);\n        setState(prevState => {\n          return {\n            ...prevState,\n            item: result,\n          };\n        });\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          error,\n        }));\n      } finally {\n        setState(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n          };\n        });\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  const {\n    title,\n    genres = [],\n    poster_path = null,\n    release_date,\n    vote_average = 0,\n    overview,\n  } = state.item;\n  const gen = genres\n    .map(item => {\n      return item.name;\n    })\n    .join(', ');\n\n  const vot = vote_average.toFixed();\n\n  return (\n    <>\n      <Btn onClick={goBack}>Go Back</Btn>\n      <Section>\n        <div>\n          <Imges>\n            <img\n              src={\n                poster_path !== null\n                  ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                  : comeBack\n              }\n              alt={title}\n            />\n          </Imges>\n          <Description>\n            <h1>{title}</h1>\n            <p>GENRES: {gen}</p>\n            <p>Release: {release_date}</p>\n            <p>Vote: {vot}</p>\n            <p>Overview: {overview}</p>\n          </Description>\n        </div>\n      </Section>\n      <Section>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <Link state={{ from }} to={`/movies/${movieId}/cast`}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link state={{ from }} to={`/movies/${movieId}/reviews`}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Suspense>\n        <Outlet />\n        </Suspense>\n      </Section>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'a3e9617806211f5c17cdc3e47a9d3960',\n  },\n});\n\nexport const getTrendingFilms = async (page = 1) => {\n  const { data } = await instance.get('/trending/movie/day', {\n    params: {\n      page,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n\n  return data;\n};\n\nexport const getMovieActors = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data.results;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await instance.get(`/search/movie`, { params: { query } });\n\n  return data.results;\n};\n"],"names":["Section","styled","Btn","Imges","Description","useState","item","loading","error","state","setState","movieId","useParams","navigate","useNavigate","from","useLocation","useEffect","fetchMovieDetails","prevState","getMovieDetails","result","title","genres","poster_path","release_date","vote_average","overview","gen","map","name","join","vot","toFixed","onClick","src","comeBack","alt","to","Suspense","instance","axios","baseURL","params","api_key","getTrendingFilms","page","get","data","results","id","getMovieActors","cast","getMovieReviews","searchMovie","query"],"sourceRoot":""}