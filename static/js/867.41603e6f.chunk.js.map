{"version":3,"file":"static/js/867.41603e6f.chunk.js","mappings":"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","sources":["modules/ShowList/ShowList.jsx","modules/MoviesSearchForm/MoviesSearchForm.jsx","pages/MoviesPage/MoviesPage.jsx","shared/api/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst ShowList = ({ items }) => {\n  const location = useLocation();\n  const elements = items.map(({ id, title }) => (\n    <li key={id}>\n      <Link state={{ from: location }} to={`/movies/${id}`}>\n        {title}\n      </Link>\n    </li>\n  ));\n\n  return <ul>{elements}</ul>;\n};\n\nexport default ShowList;\n\nShowList.defaultProps = {\n  items: [],\n};\n\nShowList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst MovieSearch = ({ onSubmit }) => {\n  const [state, setState] = useState({\n    search: '',\n  });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ search: '' });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        name=\"search\"\n        value={state.search}\n        onChange={handleChange}\n        placeholder=\"Enter name of movie\"\n        required\n      />\n      <button>Search</button>\n    </form>\n  );\n};\n\nexport default MovieSearch;\n\nMovieSearch.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport MovieSearch from 'modules/MoviesSearchForm/MoviesSearchForm';\nimport ShowList from 'modules/ShowList/ShowList';\n\nimport { searchMovie } from 'shared/api/api';\n\nconst MoviesPage = () => {\n  const [state, setState] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const search = searchParams.get('search');\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setState(prevState => ({\n          ...prevState,\n          loading: true,\n        }));\n\n        const data = await searchMovie(search);\n        setState(prevState => ({\n          ...prevState,\n          items: data,\n        }));\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          error,\n        }));\n      } finally {\n        setState(prevState => ({\n          ...prevState,\n          loading: false,\n        }));\n      }\n    };\n\n    if (search) {\n      fetchMovie();\n    }\n  }, [search]);\n\n  const changeSearch = ({ search }) => {\n    setSearchParams({ search });\n  };\n\n  const { items } = state;\n\n  return (\n    <div>\n      <MovieSearch onSubmit={changeSearch} />\n      {items.length > 0 && <ShowList items={items} />}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'a3e9617806211f5c17cdc3e47a9d3960',\n  },\n});\n\nexport const getTrendingFilms = async (page = 1) => {\n  const { data } = await instance.get('/trending/movie/day', {\n    params: {\n      page,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n\n  return data;\n};\n\nexport const getMovieActors = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data.results;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await instance.get(`/search/movie`, { params: { query } });\n\n  return data.results;\n};\n"],"names":["ShowList","items","location","useLocation","elements","map","id","title","state","from","to","defaultProps","onSubmit","useState","search","setState","e","preventDefault","name","value","onChange","target","placeholder","required","loading","error","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMovie","prevState","searchMovie","data","length","instance","axios","baseURL","params","api_key","getTrendingFilms","page","results","getMovieDetails","getMovieActors","cast","getMovieReviews","query"],"sourceRoot":""}